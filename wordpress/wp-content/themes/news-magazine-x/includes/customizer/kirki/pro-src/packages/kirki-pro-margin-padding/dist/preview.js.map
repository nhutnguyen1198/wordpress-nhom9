{"mappings":"ACwCEA,GAAGC,KAAK,CAACC,SAAS,CAAC,+BAAgC,QA7B9BiB,CAAChB,EAAQC,EAAQC,EAAQC,KAC5C,GAAI,iBAAmBA,GAAe,kBAAoBA,GAItD,CAACF,EAAOG,GAAG,EAAI,CAACH,EAAOI,KAAK,EAAI,CAACJ,EAAOK,MAAM,EAAI,CAACL,EAAOM,IAAI,CAHhE,OAAOP,EAOT,IAAMQ,EAAWL,EAAYM,OAAO,CAAC,SAAU,IAI/C,IAAK,IAAMC,KAFXV,GAAUE,EAAOS,OAAO,CAAG,IAEJV,EACrB,GAAIW,OAAOC,cAAc,CAACC,IAAI,CAACb,EAAQS,GAAW,CAChD,IAAMK,EAAQd,CAAM,CAACS,EAAS,AAE1B,CAAA,KAAOK,GACTf,CAAAA,GAAUQ,EAAW,IAAME,EAAW,KAAOK,EAAQ,GADvD,CAGF,CAKF,OAFAf,EAAU,GAGZ","sources":["<anon>","src/preview.js"],"sourcesContent":["(function () {\n(()=>{\n    /**\r\n   * Function to hook into `kirkiPostMessageStylesOutput` filter.\r\n   *\r\n   * @param {string} styles The styles to be filtered.\r\n   * @param {string|Object|int} values The control's value.\r\n   * @param {Object} output The control's output argument.\r\n   * @param {string} controlType The control type.\r\n   *\r\n   * @return {string} The filtered styles.\r\n   */ const stylesOutput = (styles, values, output, controlType)=>{\n        if (\"kirki-margin\" !== controlType && \"kirki-padding\" !== controlType) return styles;\n        if (!values.top && !values.right && !values.bottom && !values.left) return styles;\n        const property = controlType.replace(\"kirki-\", \"\");\n        styles += output.element + \"{\";\n        for(const position in values)if (Object.hasOwnProperty.call(values, position)) {\n            const value = values[position];\n            if (\"\" !== value) styles += property + \"-\" + position + \": \" + value + \";\";\n        }\n        styles += \"}\";\n        return styles;\n    };\n    // Hook the function to the `kirkiPostMessageStylesOutput` filter.\n    wp.hooks.addFilter(\"kirkiPostMessageStylesOutput\", \"kirki\", stylesOutput);\n})();\n\n})();\n//# sourceMappingURL=preview.js.map\n","(() => {\r\n  /**\r\n   * Function to hook into `kirkiPostMessageStylesOutput` filter.\r\n   *\r\n   * @param {string} styles The styles to be filtered.\r\n   * @param {string|Object|int} values The control's value.\r\n   * @param {Object} output The control's output argument.\r\n   * @param {string} controlType The control type.\r\n   *\r\n   * @return {string} The filtered styles.\r\n   */\r\n  const stylesOutput = (styles, values, output, controlType) => {\r\n    if (\"kirki-margin\" !== controlType && \"kirki-padding\" !== controlType) {\r\n      return styles;\r\n    }\r\n\r\n    if (!values.top && !values.right && !values.bottom && !values.left) {\r\n      return styles;\r\n    }\r\n\r\n    const property = controlType.replace(\"kirki-\", \"\");\r\n\r\n    styles += output.element + \"{\";\r\n\r\n    for (const position in values) {\r\n      if (Object.hasOwnProperty.call(values, position)) {\r\n        const value = values[position];\r\n\r\n        if (\"\" !== value) {\r\n          styles += property + \"-\" + position + \": \" + value + \";\";\r\n        }\r\n      }\r\n    }\r\n\r\n    styles += \"}\";\r\n\r\n    return styles;\r\n  };\r\n\r\n  // Hook the function to the `kirkiPostMessageStylesOutput` filter.\r\n  wp.hooks.addFilter(\"kirkiPostMessageStylesOutput\", \"kirki\", stylesOutput);\r\n})();\r\n"],"names":["wp","hooks","addFilter","styles","values","output","controlType","top","right","bottom","left","property","replace","position","element","Object","hasOwnProperty","call","value","stylesOutput"],"version":3,"file":"preview.js.map"}